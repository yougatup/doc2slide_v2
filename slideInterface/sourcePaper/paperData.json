{
  "abstractText": {
    "page": 0,
    "region": {
      "x1": 53.46099853515625,
      "x2": 298.6668395996094,
      "y1": 182.95834350585938,
      "y2": 287.7170104980469
    },
    "text": "ABSTRACT While crowdsourcing enables data collection at scale, ensuring high-quality data remains a challenge. In particular, effective task design underlies nearly every reported crowdsourcing success, yet remains difficult to accomplish. Task design is hard because it involves a costly iterative process: identifying the kind of work output one wants, conveying this information to workers, observing worker performance, understanding what remains ambiguous, revising the instructions, and repeating the process until the resulting output is satisfactory."
  },
  "figures": [{
    "caption": "Figure 4. The SPROUT requester interface during a Refine step of the meta-workflow (Figure 1) for the Cars task. SPROUT enables requesters to (a) drill down into categories of ambiguous items, (b) view details of items (Item 444 shown), e.g., individual worker feedback (top) and similar items (bottom), (c) edit the instructions in response, and (d) create test questions, possibly from the set of recommended test questions (SPROUT recommended item 349 because it is similar to Item 444—an example the requester provided in the instructions—and thus a good candidate for testing worker understanding).",
    "captionBoundary": {
      "x1": 53.665985107421875,
      "x2": 565.5546875,
      "y1": 438.6615295410156,
      "y2": 470.7449951171875
    },
    "figType": "Figure",
    "imageText": [],
    "name": "4",
    "page": 5,
    "regionBoundary": {
      "x1": 53.0,
      "x2": 565.0,
      "y1": 62.0,
      "y2": 433.0
    }
  }, {
    "caption": "Figure 1. SPROUT is our implemented task-improvement meta-workflow (workflow for improving a task workflow), that interleaves steps where workers answer questions using the base workflow (blue box) and meta steps (orange boxes), where meta-workers diagnose problems and suggest fixes, while SPROUT guides the requester to iteratively improve the instructions, add clarifying examples, and insert test questions to ensure understanding.",
    "captionBoundary": {
      "x1": 53.92900085449219,
      "x2": 564.1633911132812,
      "y1": 230.90451049804688,
      "y2": 254.02197265625
    },
    "figType": "Figure",
    "imageText": ["RequesterWorkers", "test", "questions", "Refine", "Requester", "clarifies", "the", "instructions", "&", "AutomatedAutomated", "Requester", "provides", "initial", "instructions", "with", "explanations", "GenTest", "Workers", "create", "test", "questions", "low-agreement", "questions", "Filter", "Select", "confusing", "&", "questions", "using", "the", "current", "workflow", "Work", "Workers", "answer", "item", "similarities", "Cluster", "items", "and", "compute", "instructions", "Organize", "Clarify", "Workers", "suggest", "changes", "to", "the", "questions", "Diagnose", "Workers", "diagnose", "possibly", "unclear", "Resolve", "Meta", "Workers"],
    "name": "1",
    "page": 1,
    "regionBoundary": {
      "x1": 55.0,
      "x2": 565.0,
      "y1": 64.71817779541016,
      "y2": 224.0
    }
  }, {
    "caption": "Figure 5. Our implementation of structured labeling [21], a method for labeling new tasks, which previous researchers have used to construct instructions [4]. Structured labeling supports concept evolution (one’s changing definition of the task as one explores more data) by allowing the requester to defer labeling decisions with a maybe label, quickly change labels for groups of items (e.g, by dragging the “multiple cars” group to a different label), and name groups for fast recall. Here, a requester is hovering over an item (Item 458 here), which displays a thumbnail preview; a requester can also click on the item to view a larger preview (not pictured) or drag the item to a different label or group.",
    "captionBoundary": {
      "x1": 321.093994140625,
      "x2": 565.7567138671875,
      "y1": 384.08251953125,
      "y2": 469.96405029296875
    },
    "figType": "Figure",
    "imageText": [],
    "name": "5",
    "page": 6,
    "regionBoundary": {
      "x1": 357.0,
      "x2": 528.0,
      "y1": 62.0,
      "y2": 379.0
    }
  }, {
    "caption": "Figure 2. SPROUT runs a gated instruction workflow [23] in the Work step of the meta-workflow (Figure 1), which ensures workers understand the instructions before starting the main task. Workers who do not pass gating do not continue with the task (indicated by the terminal square). The Refine step of the meta-workflow updates all parts of this workflow (before the first Refine step, only the main task is run since the system cannot yet construct tutorial or gating questions).",
    "captionBoundary": {
      "x1": 53.66599655151367,
      "x2": 298.3927001953125,
      "y1": 130.03854370117188,
      "y2": 189.02197265625
    },
    "figType": "Figure",
    "imageText": ["NoWork", "Main", "Task", "Yes", "Pass?", "Gating", "Questions", "Interactive", "Tutorial"],
    "name": "2",
    "page": 2,
    "regionBoundary": {
      "x1": 54.0,
      "x2": 297.0,
      "y1": 63.0,
      "y2": 124.0
    }
  }, {
    "caption": "Figure 6. Requester responses to the questions (a) “Which interface did you prefer for creating instructions?” and (b) “Which interface would you use to create instructions in the future?”. Requesters in our study overall preferred SPROUT with worker feedback rather than in structured labeling, but about half still saw uses for both interfaces.",
    "captionBoundary": {
      "x1": 320.8949890136719,
      "x2": 565.486572265625,
      "y1": 153.73153686523438,
      "y2": 194.781005859375
    },
    "figType": "Figure",
    "imageText": ["(a)", "(b)"],
    "name": "6",
    "page": 7,
    "regionBoundary": {
      "x1": 321.0,
      "x2": 565.0,
      "y1": 62.0,
      "y2": 140.86346435546875
    }
  }, {
    "caption": "Figure 3. The Resolve meta-worker HIT primitive, which implements the Diagnose, Clarify, and GenTest steps of the meta-workflow (Figure 1). A worker (a) is shown a question from the base task (here, the Cars task) and (b) is asked to perform a Diagnose step. If she decides the question is ambiguous (has multiple correct answers) given the current instructions, she then (c) performs a Clarify step by adding a rule to the instructions (based on how she might define the task). Workers who decide the question is unambiguous instead perform a GenTest step (not pictured) by creating a test question.",
    "captionBoundary": {
      "x1": 53.665985107421875,
      "x2": 564.3368530273438,
      "y1": 256.1115417480469,
      "y2": 288.19500732421875
    },
    "figType": "Figure",
    "imageText": [],
    "name": "3",
    "page": 3,
    "regionBoundary": {
      "x1": 53.0,
      "x2": 565.0,
      "y1": 62.0,
      "y2": 251.0
    }
  }],
  "sections": [{
    "paragraphs": [{
      "page": 0,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.7479553222656,
        "y1": 298.6512756347656,
        "y2": 447.1189880371094
      },
      "text": "To facilitate this process, we propose a novel meta-workflow that helps requesters optimize crowdsourcing task designs and SPROUT, our open-source tool, which implements this workflow. SPROUT improves task designs by (1) eliciting points of confusion from crowd workers, (2) enabling requesters to quickly understand these misconceptions and the overall space of questions, and (3) guiding requesters to improve the task design in response. We report the results of a user study with two labeling tasks demonstrating that requesters strongly prefer SPROUT and produce higher-rated instructions compared to current best practices for creating gated instructions (instructions plus a workflow for training and testing workers). We also offer a set of design recommendations for future tools that support crowdsourcing task design."
    }]
  }, {
    "paragraphs": [{
      "page": 0,
      "region": {
        "x1": 53.92900085449219,
        "x2": 257.6425476074219,
        "y1": 474.15728759765625,
        "y2": 480.1600036621094
      },
      "text": "Crowdsourcing; workflow; task design; debugging."
    }],
    "title": {
      "page": 0,
      "region": {
        "x1": 53.92900085449219,
        "x2": 127.75502014160156,
        "y1": 463.0723571777344,
        "y2": 468.7030029296875
      },
      "text": "Author Keywords"
    }
  }, {
    "paragraphs": [{
      "page": 0,
      "region": {
        "x1": 53.4010009765625,
        "x2": 298.655517578125,
        "y1": 506.3963317871094,
        "y2": 524.1600341796875
      },
      "text": "•Information systems → Crowdsourcing; •Humancentered computing→ Interactive systems and tools;"
    }],
    "title": {
      "page": 0,
      "region": {
        "x1": 53.92900085449219,
        "x2": 116.1978530883789,
        "y1": 496.1133728027344,
        "y2": 501.7440185546875
      },
      "text": "CCS Concepts"
    }
  }, {
    "paragraphs": [{
      "page": 0,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.66668701171875,
        "y1": 551.1993408203125,
        "y2": 684.8410034179688
      },
      "text": "Ensuring high-quality work is considered one of the main roadblocks to having crowdsourcing achieve its full potential [34]. The lack of high quality work is often attributed to unskilled workers, though it can equally be attributed to inexperienced or time-constrained requesters posting imperfect task designs [15, 35]. Often, unclear instructions confuse sincere workers because they do not clearly state the task Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org."
    }, {
      "page": 0,
      "region": {
        "x1": 55.382999420166016,
        "x2": 296.2440185546875,
        "y1": 691.0418701171875,
        "y2": 714.72900390625
      },
      "text": "UIST ’18, October 14–17, 2018, Berlin, Germany © 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM. ISBN 978-1-4503-5948-1/18/10. . . $15.00"
    }, {
      "page": 0,
      "region": {
        "x1": 55.91299819946289,
        "x2": 235.17274475097656,
        "y1": 721.3244018554688,
        "y2": 725.68798828125
      },
      "text": "DOI: https://doi.org/10.1145/3242587.3242598"
    }, {
      "page": 0,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.4218139648438,
        "y1": 182.58628845214844,
        "y2": 243.38299560546875
      },
      "text": "expectations [12]. In other cases, the task may be clear but complex; here, the lack of guided practice creates a mismatch between worker understanding and task needs [11,23]. Finally, in many cases, the requesters themselves do not appreciate the nuances of their task, a priori, and need to refine their task definition [21]."
    }, {
      "page": 0,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.8321533203125,
        "y1": 254.3173065185547,
        "y2": 358.95001220703125
      },
      "text": "Our hypothesis is that explicit or implicit feedback from workers can guide a requester towards a better task design. Unfortunately, existing tools for crowdsourcing fall severely short in this regard. While they often include best practice recommendations to counter variance in worker quality [10] (e.g., gold standard question insertion for identifying under-performing workers, aggregation of redundant labels), they do not provide mechanisms for supporting requesters in effectively defining and designing the task itself, which can mitigate the need for these downstream interventions."
    }, {
      "page": 0,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.8321533203125,
        "y1": 369.8832702636719,
        "y2": 518.3519897460938
      },
      "text": "In response, we present a novel meta-workflow that interleaves tasks performed by both crowd workers and the requester (see Figure 1) for improving task designs. SPROUT, our initial prototype, focuses on clarifying the task instructions and ensuring workers follow them, which are difficult [2] and important [12, 15, 23] aspects of task design. SPROUT evaluates a preliminary task design and organizes confusing questions by clustering explanations and instruction edits suggested by crowd workers. SPROUT’s dashboard displays these organized confusions, allowing the requester to navigate their own dataset in a prioritized manner. The system goal is to support the requester in efficiently identifying sources of confusion, refining their task understanding, and improving the task design in response."
    }, {
      "page": 0,
      "region": {
        "x1": 321.0931091308594,
        "x2": 565.8279418945312,
        "y1": 529.2863159179688,
        "y2": 655.8370361328125
      },
      "text": "SPROUT provides additional support for ensuring workers understand the instructions. It allows requesters to embed illustrative examples in the instructions and recommends potential test questions (questions with reference answers that test understanding of the instructions). Upon acceptance by the requester, the instructions and test questions are compiled into gated instructions [23], a workflow consisting of an interactive tutorial that reinforces instruction concepts and a screening phase that verifies worker comprehension before commencing work (see Figure 2). Overall, SPROUT provides a comprehensive interface for requesters to iteratively create and improve gated task instructions using worker feedback."
    }, {
      "page": 0,
      "region": {
        "x1": 320.6260070800781,
        "x2": 565.9178466796875,
        "y1": 666.7703247070312,
        "y2": 705.6500244140625
      },
      "text": "We evaluate SPROUT in a user study, comparing it against structured labeling [21], a previous method that is likely to aid requesters in creating instructions [4], while their understanding of the task may be evolving (unassisted by workers)."
    }, {
      "page": 1,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6666564941406,
        "y1": 266.7322692871094,
        "y2": 305.61199951171875
      },
      "text": "Requesters who participated in our study created gated instructions for two different types of labeling tasks—the most common crowdsourcing task type [15]—strongly preferred and produced higher-rated instructions using SPROUT."
    }, {
      "page": 1,
      "region": {
        "x1": 53.92900085449219,
        "x2": 272.1486511230469,
        "y1": 316.5452880859375,
        "y2": 322.5480041503906
      },
      "text": "In summary, this paper makes four main contributions:"
    }, {
      "page": 1,
      "region": {
        "x1": 54.427001953125,
        "x2": 297.1739196777344,
        "y1": 332.6802978515625,
        "y2": 372.36199951171875
      },
      "text": "• A novel meta-workflow—combining the efforts of both crowd workers and the requester—that helps the requester create high-quality crowdsourcing tasks more quickly and with substantially less effort than existing methods."
    }, {
      "page": 1,
      "region": {
        "x1": 54.427001953125,
        "x2": 298.6610107421875,
        "y1": 382.6062927246094,
        "y2": 477.0830078125
      },
      "text": "• SPROUT, an open-source tool that implements this workflow for labeling tasks, the most common crowdsourcing task type [15]. SPROUT first has workers suggest changes to the task instructions. It then clusters the suggestions and provides the requester with a comprehensive task-improvement interface that visualizes the clusters for fast task exploration and semi-automates the creation of a gated instruction (training and testing) workflow by suggesting test questions related to the instructions the requester has written."
    }, {
      "page": 1,
      "region": {
        "x1": 54.426998138427734,
        "x2": 298.6655578613281,
        "y1": 487.3273010253906,
        "y2": 559.885986328125
      },
      "text": "• A user study with requesters with varying amounts of crowdsourcing experience comparing SPROUT and structured labeling on two different types of labeling tasks. The results demonstrate an overall preference for SPROUT over structured labeling and for the use of worker feedback during task design. Furthermore, requesters using SPROUT produced instructions that were rated higher by experts."
    }, {
      "page": 1,
      "region": {
        "x1": 54.426998138427734,
        "x2": 298.6639709472656,
        "y1": 570.1302490234375,
        "y2": 609.81201171875
      },
      "text": "• A set of design principles for future task authoring and debugging tools, informed by our experience building SPROUT, and our observations and discussion with requesters during the user study."
    }, {
      "page": 1,
      "region": {
        "x1": 53.46099853515625,
        "x2": 297.0086975097656,
        "y1": 620.746337890625,
        "y2": 648.666015625
      },
      "text": "We implement the SPROUT tool as a web application and release the source code for both it and for structured labeling in order to facilitate future research.1"
    }],
    "title": {
      "page": 0,
      "region": {
        "x1": 53.92900085449219,
        "x2": 122.48301696777344,
        "y1": 540.1133422851562,
        "y2": 545.7440185546875
      },
      "text": "INTRODUCTION"
    }
  }, {
    "paragraphs": [{
      "page": 1,
      "region": {
        "x1": 53.46099853515625,
        "x2": 297.26153564453125,
        "y1": 678.30029296875,
        "y2": 695.2620239257812
      },
      "text": "We first discuss (1) previous work that characterizes good task design and (2) gated instructions; then, we describe existing"
    }, {
      "page": 1,
      "region": {
        "x1": 54.426998138427734,
        "x2": 272.3109130859375,
        "y1": 706.8741455078125,
        "y2": 714.3309936523438
      },
      "text": "1https://crowdlab.cs.washington.edu/task-design.html"
    }, {
      "page": 1,
      "region": {
        "x1": 321.093994140625,
        "x2": 564.8450317382812,
        "y1": 266.7322692871094,
        "y2": 283.6940002441406
      },
      "text": "tools that help requesters (3) understand user behavior and (4) improve their task design."
    }],
    "title": {
      "page": 1,
      "region": {
        "x1": 53.92900085449219,
        "x2": 130.96487426757812,
        "y1": 667.21533203125,
        "y2": 672.8460083007812
      },
      "text": "PREVIOUS WORK"
    }
  }, {
    "paragraphs": [{
      "page": 1,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.9129028320312,
        "y1": 311.68927001953125,
        "y2": 482.07598876953125
      },
      "text": "There is a small but growing body of work elucidating best practices for task design. CrowdFlower, a major crowdsourcing platform, reinforces that tasks should be divided into discrete steps governed by objective rules; they also highlight the importance of clear instructions [9] and test questions [10]. Several studies of worker attitudes also point to task clarity problems as a major risk factor for workers [12, 25, 35]. Furthermore, large-scale analyses have found positive correlations between task clarity features like the presence of examples and task performance metrics like inter-annotator agreement and fast task completion times [15]. Other controlled empirical studies provide further evidence that examples improve task outcomes [35]. Some work has sought to systematically understand the relative importance of various task design features [1, 35], but this work is limited to specific task types and general design principles remain poorly understood."
    }, {
      "page": 1,
      "region": {
        "x1": 320.8450012207031,
        "x2": 565.8295288085938,
        "y1": 493.00927734375,
        "y2": 575.7249755859375
      },
      "text": "Emerging understanding of good workflow design suggests that investing in worker understanding is critically important to crowdsourcing outcomes. A large-scale controlled study compared the efficacy of different quality control strategies, concluding that training and screening workers effectively is more important than other workflow interventions [27]. Providing feedback about a worker’s mistakes has also been shown to be very helpful in improving their answer quality [11]."
    }, {
      "page": 1,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.9203491210938,
        "y1": 586.6583251953125,
        "y2": 614.5789794921875
      },
      "text": "These studies demonstrate the strong need for tools like SPROUT to help requesters clarify the task, include illustrative examples, provide training with feedback, and screen workers."
    }, {
      "page": 1,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.8320922851562,
        "y1": 631.4893188476562,
        "y2": 714.3309936523438
      },
      "text": "Gated Instructions The importance of instructions, training, and screening was also demonstrated by an analysis of several attempts to crowdsource training data for information extraction [23]. SPROUT adopts gated instruction from this work (see Figure 2). Gated instructions is a quality control method that uses test questions to ensure that workers have read and understood the instructions. It differs from the common practice of mixing 10–30%"
    }, {
      "page": 2,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.6665954589844,
        "y1": 199.9373016357422,
        "y2": 293.6109924316406
      },
      "text": "gold standard questions into a work stream in the hope of detecting spammers [3,28], since the former is intended to ensure understanding not diligence. It also has advantages over other approaches like instructional manipulation checks [29], which test attentiveness, not understanding; can be gamed [14]; and do not provide training. A gated instruction workflow inserts two phases before the main task: an interactive tutorial, followed by a screening phase consisting of a set of questions workers must pass in order to start work on the actual task."
    }],
    "title": {
      "page": 1,
      "region": {
        "x1": 321.093994140625,
        "x2": 503.3818359375,
        "y1": 300.6043395996094,
        "y2": 306.2349853515625
      },
      "text": "Design Principles for Tasks and Workflows"
    }
  }, {
    "paragraphs": [{
      "page": 2,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.7479553222656,
        "y1": 319.6372985839844,
        "y2": 457.1470031738281
      },
      "text": "Several tools support understanding of task behaviors. CrowdScape provides visualizations to help requesters understand individual worker behaviors and outputs [31]. Noting that experimenting on different versions of task instructions, rewards, and flows is time-intensive, CrowdWeaver provides a graphical tool to help manage the process and track progress [20]. Cheng et al. [5] propose methods for automatically determining task difficulty. Kairam and Heer [17] provide methods for clustering workers (rather than questions, as SPROUT does). While there has been more emphasis on understanding worker behaviors, Papoutsaki et al. [30] instead study behaviors of novice requesters designing workflows for a data collection task; they distill several helpful lessons for requesters."
    }, {
      "page": 2,
      "region": {
        "x1": 53.599998474121094,
        "x2": 298.7479553222656,
        "y1": 468.0802917480469,
        "y2": 638.4669799804688
      },
      "text": "Other tools focus on dataset clustering and understanding. Structured labeling [21] is a tool that produces a clustered dataset with each cluster labeled by a single person akin to the requester. These “structured labels” are a flexible data asset (e.g., can support efficient data relabeling), but are expensive to produce. Revolt [4] outputs structured labels created by the crowd (to save requester effort). While structured labels are flexible, it is prohibitively expensive to run Revolt on large datasets because Revolt asks workers to explain and categorize every unresolved data item. Since Revolt’s goal is not task improvement, it does not provide a user interface for the requester nor help the requester create good instructions; their evaluation used simulated requesters. In contrast, SPROUT uses the crowd to help requesters create unambiguous instructions (thereby improving task quality) by examining a larger, more diverse subset of the data than previously possible."
    }],
    "title": {
      "page": 2,
      "region": {
        "x1": 53.92900085449219,
        "x2": 285.0724792480469,
        "y1": 308.5523376464844,
        "y2": 314.1829833984375
      },
      "text": "Understanding Task Ambiguities and Worker Behavior"
    }
  }, {
    "paragraphs": [{
      "page": 2,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.666748046875,
        "y1": 664.4923095703125,
        "y2": 714.3309936523438
      },
      "text": "SPROUT extends a line of research on tools that support designing and debugging workflows. We are inspired by Turkomatic [22], which proposed having workers themselves decompose and define a workflow to solve a high-level task description provided by a requester. Both systems embody"
    }, {
      "page": 2,
      "region": {
        "x1": 320.7359619140625,
        "x2": 565.9131469726562,
        "y1": 66.32230377197266,
        "y2": 236.7080078125
      },
      "text": "a meta-workflow with crowd workers acting in parallel with the requester. While Turkomatic was only “partially successful” [22], the vision is impressive, and we see SPROUT as diving deeper into the task specification aspect of the greater workflow design challenge. SPROUT also leverages the reusability of instructions across many instances of a task, while Turkomatic considered one-off tasks where reusability is limited. Fantasktic [13] was another system designed to help novice requesters be more systematic in their task instruction creation via a wizard interface, but did not incorporate worker feedback or aid requesters in identifying edge cases like SPROUT. Developed in parallel with our work, WingIt [24] also has workers make instruction edits to handle ambiguous instructions, but does not provide a requester interface and relies on the requester approving or modifying each individual edit (which could be very time-consuming)."
    }, {
      "page": 2,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.9224853515625,
        "y1": 247.64231872558594,
        "y2": 341.3160095214844
      },
      "text": "Forward-thinking marketplaces, such as CrowdFlower and Daemo [7], already encourage requesters to deploy prototype tasks and incorporate feedback from expert workers before launching their main task. These mechanisms demonstrate the feasibility and value of worker feedback for improving tasks. SPROUT makes this paradigm even more useful with a metaworkflow that produces structured task feedback, does not require expert workers, and enables requesters to efficiently resolve classes of ambiguities via a novel user interface."
    }],
    "title": {
      "page": 2,
      "region": {
        "x1": 53.92900085449219,
        "x2": 206.58407592773438,
        "y1": 653.4072875976562,
        "y2": 659.0379638671875
      },
      "text": "Tools for Task and Workflow Design"
    }
  }, {
    "paragraphs": [{
      "page": 2,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.9129028320312,
        "y1": 367.60528564453125,
        "y2": 428.40301513671875
      },
      "text": "In this section, we present the design of SPROUT, our system for efficiently creating gated task instructions for new tasks. The design decisions for SPROUT are based on previous work and the authors’ extensive experience running crowdsourcing tasks, and were iteratively refined through pilot studies with workers and requesters (target users)."
    }, {
      "page": 2,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.8317260742188,
        "y1": 439.3362731933594,
        "y2": 609.7230224609375
      },
      "text": "SPROUT embodies a feedback loop for task authoring and debugging. First, the requester writes a version of the instructions, which are shown to the crowd on an evaluation set (a small subset of the data) during a Work step of the metaworkflow (Figure 1). SPROUT identifies possibly confusing questions during an automated Filter step using signals such as low inter-annotator agreement. A different set of (meta)workers then perform a Diagnose step (Figure 3b), where they decide if the question is ambiguous given the current instructions. Immediately after the Diagnose step, workers perform either a Clarify step (Figure 3c) where they edit the instructions based on their own definition of the task (if they diagnose the question to be ambiguous) or a GenTest step where they create a test question with an explanation (if they believe the question has an unambiguous answer). These three steps are implemented as a single, conditional Resolve HIT (Figure 3)."
    }, {
      "page": 2,
      "region": {
        "x1": 321.09295654296875,
        "x2": 565.4166870117188,
        "y1": 620.6563110351562,
        "y2": 714.3309936523438
      },
      "text": "During a subsequent Organize step, SPROUT uses these edits and explanations to cluster various items and create item-item similarity scores. These clusters (and closely related items) are exposed in SPROUT’s dashboard (Figure 4), which allows the requester to efficiently identify various ambiguities in the previous task design as part of a Refine step. The requester improves the instructions and test questions on the basis of this feedback, SPROUT compiles these into gated instructions, and the feedback loop repeats. When the current task design"
    }, {
      "page": 3,
      "region": {
        "x1": 53.92900085449219,
        "x2": 297.00701904296875,
        "y1": 300.9062805175781,
        "y2": 317.8680114746094
      },
      "text": "no longer results in worker confusion or the requester ends the process, the final task design is run on the whole dataset."
    }],
    "title": {
      "page": 2,
      "region": {
        "x1": 321.093994140625,
        "x2": 521.4661865234375,
        "y1": 356.5203552246094,
        "y2": 362.1510009765625
      },
      "text": "SPROUT: A TOOL SUPPORTING TASK DESIGN"
    }
  }, {
    "paragraphs": [{
      "page": 3,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.2568054199219,
        "y1": 350.6692810058594,
        "y2": 433.3840026855469
      },
      "text": "SPROUT’s Filter step identifies possible points of confusion in a Work step (run on the requester’s current instructions), using either indirect signals (e.g., questions with low inter-annotator agreement) or direct signals (e.g., via a feedback input on the task itself). Possibly confusing questions trigger Resolve HITs, where crowd workers resolve potential ambiguities and in the process generate useful metadata for organizing the dataset and creating gated instructions."
    }, {
      "page": 3,
      "region": {
        "x1": 53.92865753173828,
        "x2": 298.66021728515625,
        "y1": 443.840087890625,
        "y2": 527.032958984375
      },
      "text": "Resolve HIT Part 1: In the first part of the HIT (Figure 3b), a worker performs a Diagnose step by labeling whether the question (Figure 3a) could have multiple correct answers (is ambiguous) or has exactly one answer (is unambiguous). Depending on their response, the worker subsequently performs either a Clarify step or GenTest step, respectively, in the second part. These subsequent steps take about the same amount of work, so workers tend to perform Diagnose steps honestly."
    }, {
      "page": 3,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.65472412109375,
        "y1": 537.96630859375,
        "y2": 609.7230224609375
      },
      "text": "The Diagnose step is designed to improve work quality. Our initial design omitted the Diagnose step, instead asking workers to perform a Clarify or GenTest step in the appropriate location of a single form. However, some workers entered GenTest justifications in the intended Clarify location. Forcing workers to make an explicit initial judgement and dynamically adding a follow-up question helps to reduce these errors."
    }, {
      "page": 3,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.7529296875,
        "y1": 620.1780395507812,
        "y2": 714.3309936523438
      },
      "text": "Resolve HIT Part 2, Clarify Option: If the worker decides the question is ambiguous, SPROUT elicits a category from the worker (via the text input box in Figure 3c) by having them perform a Clarify step in the second part of the HIT. This step consists of adding a clarification bullet to the instructions by describing the nature of ambiguity (category) and deciding how items in that category should be labeled if they were the requester (yes or no). SPROUT ultimately discards worker labeling decisions (since only the requester can make"
    }, {
      "page": 3,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.8316040039062,
        "y1": 300.9062805175781,
        "y2": 350.7449951171875
      },
      "text": "the final determination); their only purpose is to make the HIT feel more natural to workers. The category input field autocompletes to categories previously written by other workers to help workers reduce redundancy and arrive at a relatively small set of categories for future review by the requester."
    }, {
      "page": 3,
      "region": {
        "x1": 320.7363586425781,
        "x2": 565.9496459960938,
        "y1": 361.67828369140625,
        "y2": 455.35198974609375
      },
      "text": "SPROUT’s method of eliciting ambiguous categories by having workers directly suggest edits to the instructions is designed to produce a rich set of categories. Workers in our experiments often entered non-standard categories that function as rich decision boundaries, useful for defining the task acceptance criteria, e.g., workers entered “has the car as the main subject” or “has windshields and seats and wheels” which could help define acceptable car images. Simply asking workers to categorize ambiguities did not produce these types of categories."
    }, {
      "page": 3,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.827392578125,
        "y1": 466.2862854003906,
        "y2": 592.8370361328125
      },
      "text": "SPROUT’s Clarify step also aims to produce focused text to improve similarity comparisons and clustering results in the next Organize step of the meta-workflow. Describing an ambiguity in the context of instructions that other workers will see helps keep the text succinct. For example, the first two workers performing Clarify steps for the same question entered “should only include photographs or realistic images of birds” and “is a toy bird,” and a third worker also entered “is a toy bird” (via auto-complete). These short phrases could all be included directly in the instructions. When asked to explain ambiguities without this context, workers often entered many words unrelated to the actual ambiguity.2"
    }, {
      "page": 3,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.4189453125,
        "y1": 603.2920532226562,
        "y2": 664.5679931640625
      },
      "text": "Resolve HIT Part 2, GenTest Option: Workers that decide the question is unambiguous instead perform a GenTest step in the second part of the HIT (alternative version of Figure 3c, not pictured), where they create a test question (for use in the gated instruction workflow) by marking the correct answer and providing an explanation. These questions are good candidates"
    }, {
      "page": 3,
      "region": {
        "x1": 320.7720031738281,
        "x2": 564.4639892578125,
        "y1": 679.9751586914062,
        "y2": 714.3309936523438
      },
      "text": "2E.g., one worker wrote, “Although the image is of a bird made from legos, it is still an image of a bird. I would think that meets the criteria. However, the instructions are a bit ambiguous and don’t say whether it needs to be an actual bird or one depicted in an image.”"
    }, {
      "page": 4,
      "region": {
        "x1": 53.56999969482422,
        "x2": 297.3560485839844,
        "y1": 66.32230377197266,
        "y2": 105.20098876953125
      },
      "text": "for testing workers because (1) a worker has a reason for why it is unambiguous and (2) it is likely to help filter workers who do not fully understand the instructions and initially disagreed with that worker, causing the question to be flagged."
    }, {
      "page": 4,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6622009277344,
        "y1": 116.13529205322266,
        "y2": 198.8499755859375
      },
      "text": "For some questions, multiple workers indicated that an item is not confusing by performing GenTest steps, but submitted conflicting answers. We believe this is an important source of ambiguity, which likely happens due to differing interpretations of the same instructions. We include all such items in the set of ambiguous items and perform automatic clustering based on GenTest step explanations (since Clarify step categories are unavailable)."
    }],
    "title": {
      "page": 3,
      "region": {
        "x1": 53.92900085449219,
        "x2": 247.22698974609375,
        "y1": 339.5843811035156,
        "y2": 345.21502685546875
      },
      "text": "Finding and Characterizing Ambiguous Items"
    }
  }, {
    "paragraphs": [{
      "page": 4,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.743408203125,
        "y1": 226.3123016357422,
        "y2": 309.0270080566406
      },
      "text": "Organize is the next meta-workflow step; here, SPROUT uses all worker feedback to organize confusing questions for prioritized exploration by the requester and to determine question relatedness for context. It also maintains information for suggesting test questions to the requester in the Refine step. Toward this end, SPROUT creates (1) a two level-hierarchy of ambiguous categories, (2) a priority order for top-level categories, and (3) similarity scores for each item pair."
    }, {
      "page": 4,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6678466796875,
        "y1": 319.9612731933594,
        "y2": 446.5119934082031
      },
      "text": "SPROUT adapts the taxonomization algorithm from Cascade [6] for creating its prioritized hierarchical clusters. Proceeding from the largest categories (auto-completed instruction edits from Clarify steps) with the most confusions to the least, SPROUT selects a category to include at the top-level and nests all smaller categories with overlapping items as “related” categories (see Figure 4a). This also creates a natural order for top-level categories, since the more confusing categories are prioritized higher. Note that this is a soft clustering, i.e., an item can appear in multiple categories, which is appropriate for our task, since one item could be confusing for multiple reasons—all such reasons are likely valuable to the requester.3"
    }, {
      "page": 4,
      "region": {
        "x1": 53.56996154785156,
        "x2": 298.6666259765625,
        "y1": 457.4452819824219,
        "y2": 551.1190185546875
      },
      "text": "To compute item-item similarity, SPROUT first creates an item embedding. It uses all the text written by workers in the Resolve HITs and takes a TF-IDF-weighted linear combination of word embeddings in that text. Since the amount of text written by workers is relatively small, pre-trained word embeddings based on a Google News Corpus [26] suffice for this task—they capture similarities between semantically related words. SPROUT creates item-item similarity scores using the cosine distance between item embeddings."
    }],
    "title": {
      "page": 4,
      "region": {
        "x1": 53.92900085449219,
        "x2": 232.2896270751953,
        "y1": 215.22732543945312,
        "y2": 220.85797119140625
      },
      "text": "Clustering and Determining Related Items"
    }
  }, {
    "paragraphs": [{
      "page": 4,
      "region": {
        "x1": 53.619998931884766,
        "x2": 297.0120544433594,
        "y1": 578.581298828125,
        "y2": 628.4199829101562
      },
      "text": "The SPROUT dashboard guides requesters performing a Refine step of the meta-workflow to efficiently identify important categories of confusion (Figure 4a), inspect individual items to gain deeper understanding (Figure 4b), and redesign the task (Figure 4c,d) in response."
    }, {
      "page": 4,
      "region": {
        "x1": 53.599998474121094,
        "x2": 298.6666259765625,
        "y1": 639.3533325195312,
        "y2": 714.3309936523438
      },
      "text": "Following visualization principles of “overview first and details on demand\" [32], requesters can view all the top-level categories (largest, most confusing first) in the left column (Figure 4a), and expand categories to inspect individual items as needed. Category size is indicated next to the category 3During pilot experiments, we also tried hierarchical clustering, but found the unprioritized, hard clustering to be less useful and coherent."
    }, {
      "page": 4,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.8316040039062,
        "y1": 66.32230377197266,
        "y2": 181.91400146484375
      },
      "text": "name, along with a visualization of the distribution of workers who have answered yes, no, or ?. Test question labels from GenTest steps are denoted as yes and no, while Clarify step labels are denoted as ? (SPROUT discards labels from workers editing the instructions). Individual items within each category are represented by a button marked with the item id and colored with the mean worker answer. This compact item representation is inspired by Kulesza et al.’s [21] original structured-labeling implementation. The category and item visualizations use pink, white, and green to represent no, ?, and yes worker answers, respectively."
    }, {
      "page": 4,
      "region": {
        "x1": 320.8450012207031,
        "x2": 565.8314819335938,
        "y1": 192.84727478027344,
        "y2": 275.56298828125
      },
      "text": "Requesters can view additional details about individual items in the central preview column (Figure 4b), which is accessed by clicking on an item. The top of the preview shows worker responses from the Resolve HITs issued for the item. Below the preview, a panel shows thumbnails of similar items (sorted by descending similarity). These thumbnails are adapted from the original structured labeling implementation [21] for providing context about how to label an item."
    }, {
      "page": 4,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.8314819335938,
        "y1": 286.49627685546875,
        "y2": 369.21099853515625
      },
      "text": "The requester’s instructions editor (Figure 4c) supports example creation and rich text editing. SPROUT lets requesters format their text using the Markdown markup language, and extends that language to support referencing items as examples using Twitter mention notation (e.g., @12 will insert a reference to item 12). A preview tab lets the requester preview a formatted version of the text, with referenced items replaced by clickable item buttons."
    }, {
      "page": 4,
      "region": {
        "x1": 320.7362976074219,
        "x2": 564.5333251953125,
        "y1": 380.1452941894531,
        "y2": 451.9010009765625
      },
      "text": "To make an item into a test question, the requester simply drags it to the test questions panel (Figure 4d). Test questions are used for the gated instruction workflow that ensures that a new worker has understood the task (see next subsection). Clicking on the item in that panel opens a dialog box with a form that lets the requester edit the explanation. The form also provides guidance on best practices for writing test questions [10]."
    }, {
      "page": 4,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.9130249023438,
        "y1": 462.8352966308594,
        "y2": 578.427001953125
      },
      "text": "SPROUT suggests improvements to the task’s training regimen in the form of test-question recommendations. Each time a requester references an example item using the instructions editor, SPROUT recommends the most similar item (above a minimum similarity threshold) as a potential test question. These questions in general are good candidates for test questions because they are likely to reinforce or test understanding of the examples during the gated instruction workflow. In Figure 4d, the system has recommended an image of a boat carrying cars (item 349) since the requester had previously created an example of cars on a ferry (item 444)."
    }, {
      "page": 4,
      "region": {
        "x1": 320.7359924316406,
        "x2": 564.5233154296875,
        "y1": 589.3603515625,
        "y2": 650.1580200195312
      },
      "text": "As part of the overall workflow, requesters can quickly see which categories they have (and have not yet) inspected by the presence (or absence) of a checkmark to the left of the category name. SPROUT also provides a measure of the requester’s overall progress toward viewing all confusing categories with a progress bar above the categories."
    }],
    "title": {
      "page": 4,
      "region": {
        "x1": 53.92900085449219,
        "x2": 261.24981689453125,
        "y1": 567.496337890625,
        "y2": 573.1270141601562
      },
      "text": "Requester Dashboard for Improving Task Design"
    }
  }, {
    "paragraphs": [{
      "page": 4,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.8197021484375,
        "y1": 686.4103393554688,
        "y2": 714.3309936523438
      },
      "text": "As the final part of the Refine step, SPROUT compiles the selected test questions into gated instructions [23] (see previous work and Figure 2 for details). SPROUT partitions the test"
    }, {
      "page": 5,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6668701171875,
        "y1": 483.456298828125,
        "y2": 555.2120361328125
      },
      "text": "questions for each label into two equal-sized sets for constructing the interactive tutorial and the gating questions (ensuring similar label distributions). These sets are subject to a maximum size, which is tunable and limits the duration of gated instruction. SPROUT uses any remaining test questions as gold standard questions to ensure workers remain diligent, using, e.g., a decision-theoretic gold question insertion strategy [3]."
    }],
    "title": {
      "page": 4,
      "region": {
        "x1": 321.093994140625,
        "x2": 446.63592529296875,
        "y1": 675.3253173828125,
        "y2": 680.9559936523438
      },
      "text": "Compiling Gated Instructions"
    }
  }, {
    "paragraphs": [{
      "page": 5,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.7479248046875,
        "y1": 591.7653198242188,
        "y2": 619.68603515625
      },
      "text": "We conducted a user study to validate our system design and inform the design of future tools for improving task design. Our evaluation is guided by three primary research questions:"
    }, {
      "page": 5,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6528015136719,
        "y1": 630.1410522460938,
        "y2": 647.5809936523438
      },
      "text": "RQ1: How useful do requesters find SPROUT’s workerpowered interface for improving task design?"
    }, {
      "page": 5,
      "region": {
        "x1": 53.92829895019531,
        "x2": 298.6609802246094,
        "y1": 658.0360107421875,
        "y2": 686.4349975585938
      },
      "text": "RQ2: How helpful are SPROUT’s task improvement affordances (e.g., worker-powered structured navigation and test question suggestions)?"
    }, {
      "page": 5,
      "region": {
        "x1": 53.92900085449219,
        "x2": 297.0069885253906,
        "y1": 696.8910522460938,
        "y2": 714.3309936523438
      },
      "text": "RQ3: How much improved are task designs produced with SPROUT?"
    }, {
      "page": 5,
      "region": {
        "x1": 320.76556396484375,
        "x2": 565.8274536132812,
        "y1": 483.456298828125,
        "y2": 599.0479736328125
      },
      "text": "Our research questions seek to validate our initial hypothesis that worker feedback helps task design by measuring requester attitudes and behaviors (RQ1, RQ2) and task design quality (RQ3). While it may seem obvious that feedback can help aspects of task design like wording of instructions, it is less clear that it will help other major task design bottlenecks like discovering and defining the nuances of the task. Thus, our evaluation compares SPROUT to structured labeling [21], a strong alternative to worker feedback that embodies best practices for exploring one’s dataset and identifying important edge cases, which requesters can then add to the instructions [4]."
    }, {
      "page": 5,
      "region": {
        "x1": 320.73699951171875,
        "x2": 565.9198608398438,
        "y1": 609.9822998046875,
        "y2": 681.7379760742188
      },
      "text": "To answer these research questions, we conducted a withinsubjects laboratory study that allowed us to observe requesters using both SPROUT and structured labeling on two different task types, and to survey them on the relative benefits and weaknesses of the approaches. This study design let us get feedback from requesters with varying amount of crowdsourcing expertise, and control for interface condition and task type."
    }, {
      "page": 5,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.8271484375,
        "y1": 692.6723022460938,
        "y2": 709.6329956054688
      },
      "text": "Our experiment design asks requesters to refine their task designs according to their own understanding of the concept,"
    }, {
      "page": 6,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6667175292969,
        "y1": 66.32230377197266,
        "y2": 225.7490234375
      },
      "text": "resulting in many different task definitions. We initially attempted to control for different requester concepts by fixing the concept up-front, but could find no way to communicate a fixed concept to requesters without interfering with the experiment. If one fully describes the concept to the requester up front, the requester could simply pass this description on to the workers, obviating much of the tool’s benefit (finding ambiguities). We also tried having requesters interact during the experiment with an oracle that answers whether the requester has correctly labeled an item according to a fixed concept. However, in pilot studies, we found this interaction to be overly complex and unnatural. Ultimately, we decided to let requesters specify their own concepts and account for this in our analysis. Previous studies of requester behavior [30] employed a similar design."
    }, {
      "page": 6,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.6668395996094,
        "y1": 236.6832733154297,
        "y2": 396.1109924316406
      },
      "text": "Following the user study, we evaluated the quality of the resulting instructions to help answer RQ3. SPROUT’s objective and the truest measure of instruction quality is accuracy of the data generated by workers given those instructions. Unfortunately, we could not measure data accuracy because we do not have access to ground truth labels for comparison (each requester has their own, latent concept, which is only partially expressed through the instructions). In order to approximate data quality, we measured instruction quality directly by having two crowdsourcing experts4 rank the instructions for each task, blind to tool condition, based on the number of ambiguous categories addressed in the instructions.5 We asked the experts to base their rankings on this criterion, since reducing ambiguities is likely to improve data quality (assuming appropriate quality control measures are employed [23]),"
    }, {
      "page": 6,
      "region": {
        "x1": 53.92900085449219,
        "x2": 297.18280029296875,
        "y1": 407.0442810058594,
        "y2": 434.9649963378906
      },
      "text": "In the rest of this section, we describe how we created the tasks and two requester interfaces, how we recruited participants for our study, and the details of our experimental procedure."
    }],
    "title": {
      "page": 5,
      "region": {
        "x1": 53.92900085449219,
        "x2": 217.083251953125,
        "y1": 580.6803588867188,
        "y2": 586.31103515625
      },
      "text": "EXPLORATORY USER STUDY DESIGN"
    }
  }, {
    "paragraphs": [{
      "page": 6,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.66619873046875,
        "y1": 468.904296875,
        "y2": 507.7829895019531
      },
      "text": "We selected two classification task types of different complexity: one image and one website (mix of text and images), inspired by prior work [4]. Since prior researchers did not release their tasks, we constructed two new equal-sized datasets:"
    }, {
      "page": 6,
      "region": {
        "x1": 54.426998138427734,
        "x2": 298.6562194824219,
        "y1": 517.9152221679688,
        "y2": 546.6380004882812
      },
      "text": "• The Cars image dataset. We obtained this dataset by selecting images from all the ImageNet [16] synsets containing the word car, as described in prior work [4]."
    }, {
      "page": 6,
      "region": {
        "x1": 54.426998138427734,
        "x2": 297.01214599609375,
        "y1": 559.7522583007812,
        "y2": 632.31103515625
      },
      "text": "• The Travel website dataset. In order to have a dataset of sufficient size for measuring instructions, we collected a new, expanded version of the dataset created by Kulesza et al. [21] from the DMOZ directory.6 We found that sampling all pages from the travel category resulted in a sufficient number of ambiguous examples that it was not necessary to sample negative examples from other categories."
    }, {
      "page": 6,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.4745178222656,
        "y1": 649.6631469726562,
        "y2": 714.3309936523438
      },
      "text": "4The experts are researchers (one author, one non-author) who have each posted over 20 different crowdsourcing tasks and authored papers on the topic. Neither expert had previously seen the instructions. 5The experts determined categories independently by performing open coding [8] on the instructions. 6We used an archived version of DMOZ [33], since the original DMOZ site is no longer active."
    }, {
      "page": 6,
      "region": {
        "x1": 321.09295654296875,
        "x2": 565.8256225585938,
        "y1": 488.5122985839844,
        "y2": 626.02099609375
      },
      "text": "Our structured labeling implementation (Figure 5) operates completely independently of worker feedback and adapts key ideas from structured labeling. Requesters can label items by dragging them into yes, no, or maybe sections, organize items in groups within those sections, and name groups for easier recall. Figure 5 shows one requester’s use of these sections during the user study. Our structured labeling implementation retains the instructions and test question editors of SPROUT (Figure 4c,d), but provides space for requesters to organize items themselves (Figure 5) in place of the panel with categories created by workers (Figure 4a). We implemented structured labeling as closely as possible to the original paper, since the authors did not release their tool or source code."
    }, {
      "page": 6,
      "region": {
        "x1": 320.6260070800781,
        "x2": 565.818359375,
        "y1": 636.955322265625,
        "y2": 686.79296875
      },
      "text": "We have released the tasks, a library for generating similar tasks, and the source code for SPROUT and structured labeling for use by future researchers.7 Our requester interface implementations are web applications built on the open-source React front-end library."
    }, {
      "page": 6,
      "region": {
        "x1": 321.5929870605469,
        "x2": 539.4696044921875,
        "y1": 706.8741455078125,
        "y2": 714.3309936523438
      },
      "text": "7https://crowdlab.cs.washington.edu/task-design.html"
    }],
    "title": {
      "page": 6,
      "region": {
        "x1": 53.92900085449219,
        "x2": 227.60931396484375,
        "y1": 457.8193664550781,
        "y2": 463.45001220703125
      },
      "text": "Labeling Tasks and Requester Interfaces"
    }
  }, {
    "paragraphs": [{
      "page": 7,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.6668701171875,
        "y1": 75.72335052490234,
        "y2": 204.33001708984375
      },
      "text": "We recruited 11 participants8 to use SPROUT and structured labeling as requesters, by emailing relevant mailing lists (with IRB approval). Our participants were graduate (10) and undergraduate (1) students at a major research university. Participants ranged in age from 21 to 45 and were balanced in terms of gender (5 male, 5 female, 1 other). Eight of the participants indicated prior experience as requesters, with four reporting having launched 1–3 different tasks and four reporting having launched 4–10 different tasks. Seven of the participants indicated some prior experience as crowd workers, but no participant indicated completing more than 10 HITs. Participants were paid $25 for approximately one hour of their time."
    }],
    "title": {
      "page": 7,
      "region": {
        "x1": 53.92900085449219,
        "x2": 105.16072082519531,
        "y1": 66.69436645507812,
        "y2": 72.32501220703125
      },
      "text": "Participants"
    }
  }, {
    "paragraphs": [{
      "page": 7,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.75341796875,
        "y1": 231.45530700683594,
        "y2": 358.0060119628906
      },
      "text": "We used a within-subjects experimental design. Each requester used SPROUT and structured labeling to improve the instructions for the two tasks, one per task. We assumed there was no learning effect across tasks, so we fixed the task order as Cars followed by Travel. We used a Latin square to randomize the order in which each requester encountered the interfaces. Before each task, requesters completed a tutorial and practice task (a dataset of confusing bird images) using the assigned interface in order to ensure they understood the goal and how to use the interface. After each task, requesters completed a brief survey about their experience, and after the last task, they also rated their preferred interface."
    }, {
      "page": 7,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.75653076171875,
        "y1": 368.9402770996094,
        "y2": 451.6549987792969
      },
      "text": "To ensure that the study completed within the allotted one hour (including tutorials and surveys), requesters were given 18 minutes per task to create an improved version of the instructions. We selected 300 items for each task as the evaluation set for the instructions, anticipating 300 to be sufficiently large such that (1) it would contain most of the common ambiguities in the task definition and (2) requesters would not be limited by the number of sample items during the experiment.9"
    }, {
      "page": 7,
      "region": {
        "x1": 53.56999969482422,
        "x2": 298.78411865234375,
        "y1": 462.5882873535156,
        "y2": 589.1390380859375
      },
      "text": "Requesters were instructed to improve the initial instructions with the goal of having workers produce higher-accuracy answers that agree with the requester’s concept. We used simple initial instructions for both datasets: “Is this an image of a car?” and “Is this a website about travel?” Accuracy depends on the task specification, and since each task is underspecified to start, each requester may arrive at a different target concept. Requesters who were unsure what their concept should be were prompted to pretend they were “launching a service for detecting cars” or “launching a website for travel tips.” Requesters were also instructed to create at least three test questions that would ensure that workers understand their instructions."
    }, {
      "page": 7,
      "region": {
        "x1": 53.56905746459961,
        "x2": 297.29986572265625,
        "y1": 600.0733032226562,
        "y2": 714.3309936523438
      },
      "text": "In order to reduce the cost and variability of running the full SPROUT workflow with every requester, we pre-collected worker (and meta-worker) answers for all questions in the evaluation sets by seeding SPROUT with the initial versions of the instructions. These answers were replayed by SPROUT during experiment sessions. We deployed the Resolve HIT to 8We excluded one participant who was not directly affiliated with the university mailing lists we advertised to, and who had difficulty understanding the objective and procedure of the experiment. 9Experimentation during pilot studies showed that 18 minutes was a reasonable upper bound and 300 items was sufficiently large."
    }, {
      "page": 7,
      "region": {
        "x1": 320.6260070800781,
        "x2": 565.918701171875,
        "y1": 205.3852996826172,
        "y2": 255.2239990234375
      },
      "text": "three workers for each of the 300 items in each task, paying $0.05 per image HIT and $0.07 per website HIT (based on a wage of $8 / hour calculated from pilot deployment timings). We limited participation to U.S. workers who had completed at least 100 HITs with an approval rate of at least 95%."
    }],
    "title": {
      "page": 7,
      "region": {
        "x1": 53.92900085449219,
        "x2": 98.09550476074219,
        "y1": 220.37039184570312,
        "y2": 226.00103759765625
      },
      "text": "Procedure"
    }
  }, {
    "paragraphs": [{
      "page": 7,
      "region": {
        "x1": 321.09295654296875,
        "x2": 566.0272216796875,
        "y1": 295.8742980957031,
        "y2": 400.5069885253906
      },
      "text": "Figure 6a shows that requesters overall preferred SPROUT over structured labeling. P1 summarized the high-level benefits of worker feedback with SPROUT: “[c]ategorizing the inputs, showing me the cases where there was confusion, etc., made it SUPER easy to identify cases that needed clarification.” In contrast, structured labeling didn’t provide “a sense of what the data looked like as a whole.” Another requester (P4) expressed dismay after switching from SPROUT to structured labeling: “It sucks that you have to start from a completely blank slate. [SPROUT] gave you some more support.”"
    }, {
      "page": 7,
      "region": {
        "x1": 320.6260070800781,
        "x2": 565.9488525390625,
        "y1": 411.4412841796875,
        "y2": 548.9509887695312
      },
      "text": "While most requesters preferred SPROUT, about half indicated that they would use both interfaces in the future (Figure 6b), indicating that worker feedback is not always desired. P3 wrote “Before I had any crowd data, I liked [structured labeling] because it let me try doing the task myself...But after I had some preliminary labeled data, I would like to use [SPROUT] to see what kinds of things people were confused about.” P2 wanted to use structured labeling to start to avoid being biased by workers when deciding on her task concept. P11 expressed mixed feelings about structured labeling; she liked that it “forced [her] to personally think through what was in the image and what [she] was looking for,” but also said that “it was...pretty time consuming to create the different categories.”"
    }, {
      "page": 7,
      "region": {
        "x1": 319.76904296875,
        "x2": 565.9197387695312,
        "y1": 559.88427734375,
        "y2": 631.6409912109375
      },
      "text": "Requesters did not find the organizational aspects of structured labeling particularly useful and rarely created groups, likely because the instructions editor itself serves as an organizational tool that lets requesters describe categories with example items. Usage might change with more extended interaction; P1 noted “[groups] might be [useful] if [he] were iterating multiple times and wanted to come back...in the future.”"
    }, {
      "page": 7,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.9451904296875,
        "y1": 642.5743408203125,
        "y2": 714.3309936523438
      },
      "text": "The one requester who indicated he would use neither interface in the future (P1) did so because he prefers crafting examples by hand as a domain expert in natural language processing, explaining “[a]lthough SPROUT does help with quickly identifying the confusing cases...to make the instructions concise I typically have to come up with my own examples anyway (so I can reuse the same example sentence for a lot of examples).”"
    }],
    "title": {
      "page": 7,
      "region": {
        "x1": 321.093994140625,
        "x2": 480.904052734375,
        "y1": 269.9313659667969,
        "y2": 290.4200134277344
      },
      "text": "RESULTS RQ1: Usefulness of Worker Feedback"
    }
  }, {
    "paragraphs": [{
      "page": 8,
      "region": {
        "x1": 53.599998474121094,
        "x2": 298.6602783203125,
        "y1": 77.7792739868164,
        "y2": 237.20599365234375
      },
      "text": "Requesters found the recommended test questions particularly useful. One requester (P2), an NLP researcher, wrote “The most helpful features...is (sic) the automatically suggested test questions. The similarity metrics seems (sic) to be working great and the suggested items are great for testing the points I emphasized in the instructions.” Overall, a significant fraction of test questions created by requesters were previously recommended by SPROUT (on average, 29% and 20% for the Cars and Travel tasks, respectively). Requesters reported them useful in surveys, and several created test questions almost exclusively based on recommendations (4/5 test questions by P1 on the Cars task and 4/4 test questions by P2 on the Travel task). Still, semantically similar items are not always the best test questions; P11 complained, “if I used a ferry with cars on it as an example, it’d just return a boat as a suggestion.”"
    }, {
      "page": 8,
      "region": {
        "x1": 53.92900085449219,
        "x2": 297.03802490234375,
        "y1": 248.1403045654297,
        "y2": 287.0199890136719
      },
      "text": "Requesters used the similar items panel infrequently, perhaps due to lack of familiarity with the interface or because SPROUT already recommends the most similar item to each example in the instructions as a test question."
    }, {
      "page": 8,
      "region": {
        "x1": 53.46099853515625,
        "x2": 297.0103759765625,
        "y1": 297.9532775878906,
        "y2": 369.7099914550781
      },
      "text": "While most requesters looked at individual items first, P9 scanned the text descriptions of the categories and began to edit the instruction text without inspecting items. This type of rapid instruction improvement was made possible by the organized presentation of worker feedback. We did not instruct requesters about such strategies, and other requesters may have learned to use SPROUT more effectively with instruction."
    }, {
      "page": 8,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.65380859375,
        "y1": 389.1143493652344,
        "y2": 417.1600036621094
      },
      "text": "RQ3: Impact on Task Design Quality On average, requesters using SPROUT wrote longer instructions, cited more examples, and were rated higher by experts.10"
    }, {
      "page": 8,
      "region": {
        "x1": 53.92797088623047,
        "x2": 298.6631774902344,
        "y1": 428.0942687988281,
        "y2": 510.8089904785156
      },
      "text": "Requesters using SPROUT on average wrote longer instructions (µ = 1672 vs. 1110 characters) and cited nearly twice as many examples on the Travel task compared to structured labeling (µ = 4.6 vs. 2.6 examples). These results are weakly significant based on a two-sided Welch’s t-test (t = 1.89, p = 0.10; t = 1.77, p = 0.11). There was no significant difference on the Cars task (t = −0.30, p = 0.78; t = −0.09, p = 0.93)."
    }, {
      "page": 8,
      "region": {
        "x1": 53.599998474121094,
        "x2": 298.66241455078125,
        "y1": 521.7432861328125,
        "y2": 626.3759765625
      },
      "text": "Two crowdsourcing experts independently ranked the instructions for each task into five quality buckets (valued 1 to 5), assigning higher values to instructions that mentioned more categories of ambiguous items. Both experts ranked instructions produced using SPROUT higher on the Cars task compared to structured labeling (µ = 4.0 vs. 2.8; µ = 3.2 vs. 2.0). These results are weakly significant based on a two-sided Welch’s t-test (t = 1.78, p = 0.11; t = 1.88, p = 0.11). There was no significant difference on the Travel task for either expert rating (t = 0.0, p = 1.0; t = 0.0, p = 1.0)."
    }, {
      "page": 8,
      "region": {
        "x1": 53.619998931884766,
        "x2": 297.17938232421875,
        "y1": 637.309326171875,
        "y2": 676.1890258789062
      },
      "text": "Together, these results suggest that SPROUT helps create more comprehensive instructions. Detailed instructions can elicit higher quality data from workers when combined with proper training and screening methods like gated instructions [23]."
    }, {
      "page": 8,
      "region": {
        "x1": 50.939998626708984,
        "x2": 296.99664306640625,
        "y1": 688.941162109375,
        "y2": 714.3309936523438
      },
      "text": "10Larger samples are needed to establish statistical significance. We excluded P5 from analysis of the Travel task, since she was unable to complete the task due to difficulty finding a motivation for the task."
    }, {
      "page": 8,
      "region": {
        "x1": 321.093994140625,
        "x2": 505.7935791015625,
        "y1": 66.69436645507812,
        "y2": 72.32501220703125
      },
      "text": "DESIGN IMPLICATIONS FOR TASK DESIGN"
    }],
    "title": {
      "page": 8,
      "region": {
        "x1": 53.92900085449219,
        "x2": 235.4002227783203,
        "y1": 66.32230377197266,
        "y2": 72.32501220703125
      },
      "text": "RQ2: Usefulness of SPROUT’s Affordances"
    }
  }, {
    "paragraphs": [{
      "page": 8,
      "region": {
        "x1": 320.7659912109375,
        "x2": 565.919921875,
        "y1": 93.35831451416016,
        "y2": 230.86798095703125
      },
      "text": "It is essential that future task design tools help requesters view items with minimal overhead. In structured labeling, even dragging items into yes / no / maybe sections was inefficient for some requesters, who found it faster to scroll through the carousel of item thumbnails. P1 complained that even this carousel had too much friction and the images were too small. A more efficient view might have been a vertical scroll (used by websites like Instagram) with an option to resize images, though factors such as scrolling direction and number of items per page can have subtle effects on performance [18,19]. One requester (P8) seemed to experience similar friction with SPROUT, repurposing the similar items (bottom of Figure 4b) for quickly retrieving new items (not just similar ones)."
    }, {
      "page": 8,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.9476928710938,
        "y1": 241.8013153076172,
        "y2": 313.5580139160156
      },
      "text": "SPROUT was designed with the idea that one must explore items before writing instructions. However, one can also view exploration in service of the ultimate goal of creating instructions. From this viewpoint, P10 felt that the instructions editor would be more natural on the left. Other requesters felt that SPROUT could have benefited from more “visual hierarchy” (P8) and “linear process” (P3)."
    }],
    "title": {
      "page": 8,
      "region": {
        "x1": 321.093994140625,
        "x2": 482.7510986328125,
        "y1": 82.27334594726562,
        "y2": 87.90399169921875
      },
      "text": "How to make exploration frictionless?"
    }
  }, {
    "paragraphs": [{
      "page": 8,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.8320922851562,
        "y1": 340.56927490234375,
        "y2": 478.0790100097656
      },
      "text": "Another design decision to consider is how much and when to show information about worker confusions to the requester. P5 felt overwhelmed by the number of categories displayed and began clicking through categories without regard to their prioritization. In contrast, P9 benefited from having all categories displayed initially, as his strategy was to read the descriptions, edit the instructions, and only look at items periodically. Providing the right amount of support for a diverse set of users is a challenging problem for mixed-initiative systems. One possibility is to make the frictionless vertical scroll described above the default mode, and enable the requester to use additional features from SPROUT and structured labeling on demand as they learn what tools most benefit their personal workflow."
    }],
    "title": {
      "page": 8,
      "region": {
        "x1": 321.093994140625,
        "x2": 459.358642578125,
        "y1": 329.484375,
        "y2": 335.1150207519531
      },
      "text": "How much information to show?"
    }
  }, {
    "paragraphs": [{
      "page": 8,
      "region": {
        "x1": 320.7359924316406,
        "x2": 564.347900390625,
        "y1": 505.09027099609375,
        "y2": 576.8460083007812
      },
      "text": "Another possibility is to create an adaptive version of SPROUT that shows the requester a sequence of only the most important and diverse categories, taking into account the set of items the requester has viewed and the instructions she has written up to that point. More knowledge about the space of items considered by the requester so far could also enable smarter suggestions for improvements to the instructions."
    }, {
      "page": 8,
      "region": {
        "x1": 320.6260070800781,
        "x2": 566.1668701171875,
        "y1": 587.7803344726562,
        "y2": 714.3309936523438
      },
      "text": "While our tool supports test question creation by the requester, it is unclear whether the requester need be the one to do so, once she has written a clear set of instructions with examples. Indeed, our high-level vision (Figure 1) is that workers (or the system) should be able to determine when the requester’s input is needed. This suggests that other tedious task components, such as gold questions or task advertisements, might be created automatically by meta-workers, saving requester time. And while P1 wanted SPROUT to help him ensure the distribution of test question labels matched the overall distribution of labels— as recommended by CrowdFlower for gold questions [10]— such tools may not be necessary either."
    }, {
      "page": 9,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.6666564941406,
        "y1": 66.69436645507812,
        "y2": 215.28900146484375
      },
      "text": "How to balance self-organization and worker support? While the instructions themselves can be used for organizational purposes, additional support for self-organization in SPROUT could have been helpful. For instance, P9 had trouble recalling and finding a category of items he had previously read (but not opened, so it did not have a check mark). P4 on the other hand wanted to incorporate some of the intelligence of SPROUT into structured labeling by automatically narrowing the set of items classified as maybe using structured labeling (e.g., using item vector embeddings), when items in that section are covered by the instructions. Finding a middle ground and making transparent what the workers have done vs. what the requester has done is challenging but could pay dividends."
    }],
    "title": {
      "page": 8,
      "region": {
        "x1": 321.093994140625,
        "x2": 441.758544921875,
        "y1": 494.00537109375,
        "y2": 499.6360168457031
      },
      "text": "How much initiative to take?"
    }
  }, {
    "paragraphs": [{
      "page": 9,
      "region": {
        "x1": 52.604000091552734,
        "x2": 298.6600036621094,
        "y1": 242.1343231201172,
        "y2": 379.64300537109375
      },
      "text": "Even if one starts out with a binary-classification problem, one can realize down the line that the task might benefit from decomposition or structured output of a different kind. Two of our requesters familiar with crowdsourcing for NLP (P1, P2) wanted to change the task interface, for instance by changing the answer labels, or to break the task into smaller subtasks “since it is easier to write instructions for small tasks.” Supporting these aspects of task design are a worthy goal and could benefit from SPROUT’s feedback loop; we chose to focus on binary labeling tasks since (a) they are the most common crowdsourcing task type [15] and (b) we wanted to constrain the design space to avoid some of the pitfalls of previous work that tackled broader problems [22]."
    }, {
      "page": 9,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.66119384765625,
        "y1": 390.5772705078125,
        "y2": 484.2510070800781
      },
      "text": "In addition to supporting more aspects of task design, we believe that future versions of SPROUT could naturally support additional types of tasks. Labeling tasks with more than two answers are possible with minor interface changes, and more generally, we envision SPROUT being useful for any task with many different instances (questions) that share a common design (so that improvement benefits many questions) and have a correct answer (so workers can be tested before beginning the task), for example information-seeking tasks [30]."
    }, {
      "page": 9,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.74798583984375,
        "y1": 500.0113525390625,
        "y2": 626.68798828125
      },
      "text": "How to scaffold the process of learning to design tasks? Our requesters were largely unpracticed at writing high-quality crowdsourcing instructions. There is opportunity to incorporate tools for helping requesters—such as guiding them toward effective strategies—into SPROUT. P4 mentioned it would helpful to have templates for common things to say to workers like “use your best judgement.” P1 thought better support for task criteria labels would be useful for overall consistency. We agree that these would be great to add, but determining a single set of best practices is difficult. It may also be possible to train crowd workers instead to hone the presentation of the task."
    }],
    "title": {
      "page": 9,
      "region": {
        "x1": 53.92900085449219,
        "x2": 219.27096557617188,
        "y1": 231.04934692382812,
        "y2": 236.67999267578125
      },
      "text": "How much of the workflow to support?"
    }
  }, {
    "paragraphs": [{
      "page": 9,
      "region": {
        "x1": 53.92900085449219,
        "x2": 298.6776428222656,
        "y1": 653.5333251953125,
        "y2": 714.3309936523438
      },
      "text": "Several additional types of evaluation would strengthen our findings. Future studies should strive to measure both data accuracy and worker satisfaction resulting from task improvement. More studies are also needed to investigate what happens when instructions become very complex, and to demonstrate that our findings generalize to many types of requesters."
    }, {
      "page": 9,
      "region": {
        "x1": 320.6260070800781,
        "x2": 565.8286743164062,
        "y1": 66.32230377197266,
        "y2": 203.83197021484375
      },
      "text": "While our study design allowed for controlled observation of requester behavior, we also encountered several experimental challenges. Several requesters experienced difficulty deciding on a motivating concept to help them make labeling decisions, causing large delays (P5) or concept changes just to simplify the task (P11); providing tools to requesters solving their own problems may improve motivation. Future studies could also seek to better control for the amount of time requesters spend on each task (some requesters ended the task early), or the style of instructions (e.g., by providing more requester training). Finally, studying multiple task types was informative but decreased statistical power; future studies could try other experimental designs (e.g., with task type as a blocking factor)."
    }],
    "title": {
      "page": 9,
      "region": {
        "x1": 53.92900085449219,
        "x2": 109.59889221191406,
        "y1": 642.4483032226562,
        "y2": 648.0789794921875
      },
      "text": "LIMITATIONS"
    }
  }, {
    "paragraphs": [{
      "page": 9,
      "region": {
        "x1": 320.7860107421875,
        "x2": 565.8318481445312,
        "y1": 241.08030700683594,
        "y2": 323.7950134277344
      },
      "text": "To achieve high-quality output from crowdsourcing, one requires diligent workers working on well-designed, and clearlyexplained tasks. While there are many papers on identifying diligent workers and substantial research on patterns for task decomposition, our work is perhaps the first tool that helps requesters design effective instructions. Instructions may be less glamorous than some other aspects of crowdourcing, but they have been shown to be deeply important [23]."
    }, {
      "page": 9,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.8320922851562,
        "y1": 334.7292785644531,
        "y2": 450.3210144042969
      },
      "text": "Furthermore, SPROUT uses a novel method to aid instruction design and debugging: having the crowd evaluate the current design on a sample of data, identifying confusing questions based on disagreement and worker diagnoses, clustering confusion categories based on worker instruction edits, and showing those in an organized and prioritized manner so that a requester can quickly learn the various nuances of their task and its current flaws. SPROUT further aids a requester by providing a natural interface for improving instructions with embedded illustrative examples and recommending test questions for a gated instruction workflow that ensures worker understanding."
    }, {
      "page": 9,
      "region": {
        "x1": 320.7659912109375,
        "x2": 565.9180908203125,
        "y1": 461.2542724609375,
        "y2": 609.7230224609375
      },
      "text": "Nearly all the requesters in our user study (with varying amounts of crowdsourcing expertise) preferred to use SPROUT (which has worker feedback) over structured labeling, a natural baseline that supports requesters learning about their task themselves rather than through worker feedback. Some requesters felt that structured labeling is a good interface for creating the first set of instructions, but overall they preferred the full power of SPROUT, which makes effective task design more convenient. On average, instructions produced using SPROUT were longer, cited more examples, and were rated higher by multiple crowdsourcing experts. This user study also led to our set of design implications for future task design, and we have released our source code and web-based implementations for further use by requesters and researchers."
    }, {
      "page": 9,
      "region": {
        "x1": 320.7359924316406,
        "x2": 565.83154296875,
        "y1": 620.6563110351562,
        "y2": 714.3309936523438
      },
      "text": "In the future, we plan to use the crowd to improve other aspects of task and workflow design, such as task decomposition, and to support task design beyond labeling tasks. For example, we envision crowd workers retrieving task details from requesters as needed and collaboratively developing even better designs with minimal requester effort. We encourage other researchers to continue to explore new ways to leverage and develop worker task design skills, and to build systems that mediate worker-requester communications."
    }],
    "title": {
      "page": 9,
      "region": {
        "x1": 321.093994140625,
        "x2": 387.3437805175781,
        "y1": 229.99533081054688,
        "y2": 235.6259765625
      },
      "text": "CONCLUSIONS"
    }
  }, {
    "paragraphs": [{
      "page": 10,
      "region": {
        "x1": 53.46099853515625,
        "x2": 298.7479248046875,
        "y1": 77.7792739868164,
        "y2": 193.3709716796875
      },
      "text": "We thank Gagan Bansal, Quanze Chen, and Christopher Lin, for their early feedback, and Eytan Adar, Danielle Bragg, Ravi Karkar, Tongshuang Wu, and the anonymous reviewers for their feedback on paper drafts. We also thank the requesters and workers who participated in our study, as well as the external crowdsourcing expert who judged the instructions. This work was supported in part by NSF grant IIS-1420667, ONR grants N00014-15-1-2774 and N00014-18-1-2193, the WRF/Cable Professorship, support from Google, a Bloomberg award, an IBM SUR award, and a Visvesvaraya faculty award by the Government of India to the second author."
    }],
    "title": {
      "page": 10,
      "region": {
        "x1": 53.92900085449219,
        "x2": 156.7241668701172,
        "y1": 66.69436645507812,
        "y2": 72.32501220703125
      },
      "text": "ACKNOWLEDGEMENTS"
    }
  }, {
    "paragraphs": [{
      "page": 10,
      "region": {
        "x1": 58.90999984741211,
        "x2": 289.1749267578125,
        "y1": 220.24522399902344,
        "y2": 226.2479248046875
      },
      "text": "1. Harini Alagarai Sampath, Rajeev Rajeshuni, and Bipin"
    }, {
      "page": 10,
      "region": {
        "x1": 70.25799560546875,
        "x2": 298.65118408203125,
        "y1": 231.20323181152344,
        "y2": 292.0009765625
      },
      "text": "Indurkhya. 2014. Cognitively Inspired Task Design to Improve User Performance on Crowdsourcing Platforms. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI ’14). ACM, New York, NY, USA, 3665–3674. DOI: http://dx.doi.org/10.1145/2556288.2557155"
    }, {
      "page": 10,
      "region": {
        "x1": 58.909996032714844,
        "x2": 290.4919128417969,
        "y1": 302.5362548828125,
        "y2": 352.37493896484375
      },
      "text": "2. Omar Alonso and Stefano Mizzaro. 2012. Using crowdsourcing for TREC relevance assessment. Information Processing and Management 48, 6 (2012), 1053–1066. DOI: http://dx.doi.org/10.1016/j.ipm.2012.01.004"
    }, {
      "page": 10,
      "region": {
        "x1": 58.909996032714844,
        "x2": 297.0180969238281,
        "y1": 362.91021728515625,
        "y2": 434.66595458984375
      },
      "text": "3. Jonathan Bragg, Mausam, and Daniel S. Weld. 2016. Optimal Testing for Crowd Workers. In Proceedings of the 2016 International Conference on Autonomous Agents & Multiagent Systems (AAMAS ’16). International Foundation for Autonomous Agents and Multiagent Systems, Richland, SC, 966–974. http://dl.acm.org/citation.cfm?id=2937029.2937066"
    }, {
      "page": 10,
      "region": {
        "x1": 58.909996032714844,
        "x2": 297.0089111328125,
        "y1": 445.20123291015625,
        "y2": 505.99896240234375
      },
      "text": "4. Joseph Chee Chang, Saleema Amershi, and Ece Kamar. 2017. Revolt: Collaborative Crowdsourcing for Labeling Machine Learning Datasets. In Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems (CHI ’17). 2334–2346. DOI: http://dx.doi.org/10.1145/3025453.3026044"
    }, {
      "page": 10,
      "region": {
        "x1": 58.909996032714844,
        "x2": 299.60723876953125,
        "y1": 516.5343017578125,
        "y2": 577.3309936523438
      },
      "text": "5. Justin Cheng, Jaime Teevan, and Michael S. Bernstein. 2015. Measuring Crowdsourcing Effort with Error-Time Curves. In Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems (CHI ’15). ACM, New York, NY, USA, 1365–1374. DOI: http://dx.doi.org/10.1145/2702123.2702145"
    }, {
      "page": 10,
      "region": {
        "x1": 58.909996032714844,
        "x2": 296.97039794921875,
        "y1": 587.8663330078125,
        "y2": 659.6220092773438
      },
      "text": "6. Lydia B. Chilton, Greg Little, Darren Edge, Daniel S. Weld, and James A. Landay. 2013. Cascade: Crowdsourcing Taxonomy Creation. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI ’13). ACM, New York, NY, USA, 1999–2008. DOI: http://dx.doi.org/10.1145/2470654.2466265"
    }, {
      "page": 10,
      "region": {
        "x1": 58.90998840332031,
        "x2": 268.332275390625,
        "y1": 670.1573486328125,
        "y2": 687.1190185546875
      },
      "text": "7. Stanford Crowd Research Collective. The Daemo Crowdsourcing Marketplace. In CSCW ’17."
    }, {
      "page": 10,
      "region": {
        "x1": 58.910003662109375,
        "x2": 270.3973693847656,
        "y1": 697.654296875,
        "y2": 714.6160278320312
      },
      "text": "8. Juliet Corbin and Anselm Strauss. 2014. Basics of Qualitative Research. SAGE Publications, Inc."
    }, {
      "page": 10,
      "region": {
        "x1": 326.07598876953125,
        "x2": 544.8139038085938,
        "y1": 66.32230377197266,
        "y2": 94.24298095703125
      },
      "text": "9. Crowdflower. 2017a. Ideal Jobs for Crowdsourcing. (2017). https://success.crowdflower.com/hc/en-us/ articles/202703295-Ideal-Jobs-for-Crowdsourcing"
    }, {
      "page": 10,
      "region": {
        "x1": 338.0309753417969,
        "x2": 436.57513427734375,
        "y1": 99.19828033447266,
        "y2": 105.20098876953125
      },
      "text": "Downloaded on 9/17/17."
    }, {
      "page": 10,
      "region": {
        "x1": 321.0939636230469,
        "x2": 541.29296875,
        "y1": 115.7363052368164,
        "y2": 143.656982421875
      },
      "text": "10. Crowdflower. 2017b. Test Question Best Practices. (2017). https://success.crowdflower.com/hc/en-us/ articles/213078963-Test-Question-Best-Practices"
    }, {
      "page": 10,
      "region": {
        "x1": 338.03094482421875,
        "x2": 436.5751037597656,
        "y1": 148.61326599121094,
        "y2": 154.615966796875
      },
      "text": "Downloaded on 9/17/17."
    }, {
      "page": 10,
      "region": {
        "x1": 321.09393310546875,
        "x2": 564.111572265625,
        "y1": 165.1512908935547,
        "y2": 225.94891357421875
      },
      "text": "11. Steven Dow, Anand Kulkarni, Scott Klemmer, and Björn Hartmann. 2012. Shepherding the Crowd Yields Better Work. In Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work (CSCW ’12). ACM, New York, NY, USA, 1013–1022. DOI: http://dx.doi.org/10.1145/2145204.2145355"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.7655639648438,
        "y1": 236.48423767089844,
        "y2": 297.281005859375
      },
      "text": "12. Ujwal Gadiraju, Yang Jie, and Alessandro Bozzon. 2017. Clarity is a Worthwhile Quality - On the Role of Task Clarity in Microtask Crowdsourcing. In Proceedings of the 28th ACM Conference on Hypertext and Social Media (HT ’17). 5–14. DOI: http://dx.doi.org/10.1145/3078714.3078715"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.9201049804688,
        "y1": 307.8162841796875,
        "y2": 346.6960144042969
      },
      "text": "13. Philipp Gutheim and Björn Hartmann. 2012. Fantasktic : Improving Quality of Results for Novice Crowdsourcing Users. Master’s thesis. University of California, Berkeley. http://www.eecs.berkeley.edu/Pubs/TechRpts/2012/"
    }, {
      "page": 10,
      "region": {
        "x1": 338.031005859375,
        "x2": 414.343994140625,
        "y1": 353.29144287109375,
        "y2": 357.655029296875
      },
      "text": "EECS-2012-112.html"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 566.7353515625,
        "y1": 368.1903076171875,
        "y2": 418.02801513671875
      },
      "text": "14. David J. Hauser and Norbert Schwarz. 2016. Attentive Turkers: MTurk participants perform better on online attention checks than do subject pool participants. Behavior Research Methods 48, 1 (2016), 400–407. DOI: http://dx.doi.org/10.3758/s13428-015-0578-z"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 564.0718994140625,
        "y1": 428.56329345703125,
        "y2": 500.3199462890625
      },
      "text": "15. Ayush Jain, Akash Das Sarma, Aditya Parameswaran, and Jennifer Widom. 2017. Understanding Workers, Developing Effective Tasks, and Enhancing Marketplace Dynamics: A Study of a Large Crowdsourcing Marketplace. In 43rd International Conference on Very Large Data Bases (VLDB). DOI: http://dx.doi.org/10.14778/2735471.2735474"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 563.8626098632812,
        "y1": 510.8551940917969,
        "y2": 560.6929321289062
      },
      "text": "16. Jia Deng, Wei Dong, R. Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. 2009. ImageNet: A large-scale hierarchical image database. In 2009 IEEE Conference on Computer Vision and Pattern Recognition. 248–255. DOI: http://dx.doi.org/10.1109/CVPRW.2009.5206848"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 560.5250854492188,
        "y1": 571.228271484375,
        "y2": 642.9849243164062
      },
      "text": "17. Sanjay Kairam and Jeffrey Heer. 2016. Parting Crowds: Characterizing Divergent Interpretations in Crowdsourced Annotation Tasks. In Proceedings of the 19th ACM Conference on Computer-Supported Cooperative Work & Social Computing (CSCW ’16). ACM, New York, NY, USA, 1637–1648. DOI: http://dx.doi.org/10.1145/2818048.2820016"
    }, {
      "page": 10,
      "region": {
        "x1": 321.093994140625,
        "x2": 560.4852905273438,
        "y1": 653.520263671875,
        "y2": 725.2759399414062
      },
      "text": "18. Diane Kelly and Leif Azzopardi. 2015. How Many Results Per Page?: A Study of SERP Size, Search Behavior and User Experience. In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR ’15). ACM, New York, NY, USA, 183–192. DOI: http://dx.doi.org/10.1145/2766462.2767732"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92900085449219,
        "x2": 292.833740234375,
        "y1": 63.114295959472656,
        "y2": 134.86993408203125
      },
      "text": "19. Jaewon Kim, Paul Thomas, Ramesh Sankaranarayana, Tom Gedeon, and Hwan-Jin Yoon. 2016. Pagination Versus Scrolling in Mobile Web Search. In Proceedings of the 25th ACM International on Conference on Information and Knowledge Management (CIKM ’16). ACM, New York, NY, USA, 751–760. DOI: http://dx.doi.org/10.1145/2983323.2983720"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92898941040039,
        "x2": 297.2065734863281,
        "y1": 145.40525817871094,
        "y2": 206.20294189453125
      },
      "text": "20. Aniket Kittur, Susheel Khamkar, Paul André, and Robert Kraut. 2012. CrowdWeaver: Visually Managing Complex Crowd Work. In Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work (CSCW ’12). ACM, New York, NY, USA, 1033–1036. DOI:http://dx.doi.org/10.1145/2145204.2145357"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92900466918945,
        "x2": 297.1756591796875,
        "y1": 216.73826599121094,
        "y2": 288.493896484375
      },
      "text": "21. Todd Kulesza, Saleema Amershi, Rich Caruana, Danyel Fisher, and Denis Charles. 2014. Structured Labeling for Facilitating Concept Evolution in Machine Learning. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI ’14). ACM, New York, NY, USA, 3075–3084. DOI: http://dx.doi.org/10.1145/2556288.2557238"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92899703979492,
        "x2": 297.0081787109375,
        "y1": 299.0291748046875,
        "y2": 359.82696533203125
      },
      "text": "22. Anand Kulkarni, Matthew Can, and Björn Hartmann. 2012. Collaboratively Crowdsourcing Workflows with Turkomatic. In Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work (CSCW ’12). ACM, New York, NY, USA, 1003–1012. DOI: http://dx.doi.org/10.1145/2145204.2145354"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92899703979492,
        "x2": 298.7520751953125,
        "y1": 370.36224365234375,
        "y2": 464.03594970703125
      },
      "text": "23. Angli Liu, Stephen Soderland, Jonathan Bragg, Christopher H. Lin, Xiao Ling, and Daniel S. Weld. 2016. Effective Crowd Annotation for Relation Extraction. In Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (NAACL-HLT ’16). The Association for Computational Linguistics, 897–906. http://aclweb.org/anthology/N/N16/N16-1104.pdf"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92899703979492,
        "x2": 297.3843994140625,
        "y1": 474.57122802734375,
        "y2": 535.367919921875
      },
      "text": "24. V. K. Chaithanya Manam and Alexander J. Quinn. 2018. WingIt: Efficient Refinement of Unclear Task Instructions. In Proceedings of the Sixth AAAI Conference on Human Computation and Crowdsourcing (HCOMP ’18). AAAI Press, 108–116. https://aaai.org/ ocs/index.php/HCOMP/HCOMP18/paper/view/17931"
    }, {
      "page": 11,
      "region": {
        "x1": 53.929012298583984,
        "x2": 290.5104064941406,
        "y1": 545.9031982421875,
        "y2": 628.618896484375
      },
      "text": "25. Brian McInnis, Dan Cosley, Chaebong Nam, and Gilly Leshed. 2016. Taking a HIT: Designing Around Rejection, Mistrust, Risk, and Workers’ Experiences in Amazon Mechanical Turk. In Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems (CHI ’16). ACM, New York, NY, USA, 2271–2282. DOI: http://dx.doi.org/10.1145/2858036.2858539"
    }, {
      "page": 11,
      "region": {
        "x1": 53.92899703979492,
        "x2": 298.21014404296875,
        "y1": 639.1542358398438,
        "y2": 688.9920043945312
      },
      "text": "26. Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Corrado, and Jeffrey Dean. 2013. Distributed Representations of Words and Phrases and their Compositionality. In NIPS. 1–9. DOI: http://dx.doi.org/10.1162/jmlr.2003.3.4-5.951"
    }, {
      "page": 11,
      "region": {
        "x1": 321.093994140625,
        "x2": 563.9223022460938,
        "y1": 66.32230377197266,
        "y2": 135.92095947265625
      },
      "text": "27. Tanushree Mitra, C.J. Hutto, and Eric Gilbert. 2015. Comparing Person- and Process-centric Strategies for Obtaining Quality Data on Amazon Mechanical Turk. In Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems (CHI ’15). ACM, New York, NY, USA, 1345–1354. DOI: http://dx.doi.org/10.1145/2702123.2702553"
    }, {
      "page": 11,
      "region": {
        "x1": 321.0940246582031,
        "x2": 567.012939453125,
        "y1": 148.3772430419922,
        "y2": 209.17401123046875
      },
      "text": "28. David Oleson, Alexander Sorokin, Greg P. Laughlin, Vaughn Hester, John Le, and Lukas Biewald. 2011. Programmatic Gold: Targeted and Scalable Quality Assurance in Crowdsourcing. In Human Computation, Papers from the 2011 AAAI Workshop. AAAI. http://www. aaai.org/ocs/index.php/WS/AAAIW11/paper/view/3995"
    }, {
      "page": 11,
      "region": {
        "x1": 321.093994140625,
        "x2": 565.9105224609375,
        "y1": 221.6302947998047,
        "y2": 271.468017578125
      },
      "text": "29. Daniel M. Oppenheimer, Tom Meyvis, and Nicolas Davidenko. 2009. Instructional manipulation checks: Detecting satisficing to increase statistical power. Journal of Experimental Social Psychology 45, 4 (2009), 867–872. DOI:http://dx.doi.org/10.1016/j.jesp.2009.03.009"
    }, {
      "page": 11,
      "region": {
        "x1": 321.093994140625,
        "x2": 564.1787719726562,
        "y1": 283.9242858886719,
        "y2": 366.63897705078125
      },
      "text": "30. Alexandra Papoutsaki, Hua Guo, Danae Metaxa-Kakavouli, Connor Gramazio, Jeff Rasley, Wenting Xie, Guan Wang, and Jeff Huang. 2015. Crowdsourcing from Scratch: A Pragmatic Experiment in Data Collection by Novice Requesters. In Proceedings of the Third AAAI Conference on Human Computation and Crowdsourcing (HCOMP ’15). AAAI Press, 140–149. http://www.aaai.org/ocs/index.php/HCOMP/HCOMP15/paper/"
    }, {
      "page": 11,
      "region": {
        "x1": 337.8240051269531,
        "x2": 379.6666259765625,
        "y1": 373.234375,
        "y2": 377.59796142578125
      },
      "text": "view/11582"
    }, {
      "page": 11,
      "region": {
        "x1": 321.093994140625,
        "x2": 558.7317504882812,
        "y1": 390.0532531738281,
        "y2": 450.85089111328125
      },
      "text": "31. Jeffrey Rzeszotarski and Aniket Kittur. 2012. CrowdScape: Interactively Visualizing User Behavior and Output. In Proceedings of the 25th Annual ACM Symposium on User Interface Software and Technology (UIST ’12). ACM, New York, NY, USA, 55–62. DOI: http://dx.doi.org/10.1145/2380116.2380125"
    }, {
      "page": 11,
      "region": {
        "x1": 321.0939636230469,
        "x2": 560.2460327148438,
        "y1": 463.3061828613281,
        "y2": 524.1038208007812
      },
      "text": "32. Ben Shneiderman. 1996. The Eyes Have It: A Task by Data Type Taxonomy for Information Visualizations. In Proceedings of the 1996 IEEE Symposium on Visual Languages (VL ’96). IEEE Computer Society, Washington, DC, USA, 336–. http://dl.acm.org/citation.cfm?id=832277.834354"
    }, {
      "page": 11,
      "region": {
        "x1": 321.0939636230469,
        "x2": 554.7783203125,
        "y1": 536.5591430664062,
        "y2": 553.5208129882812
      },
      "text": "33. Gaurav Sood. 2016. Parsed DMOZ data. (2016). DOI: http://dx.doi.org/10.7910/DVN/OMV93V"
    }, {
      "page": 11,
      "region": {
        "x1": 321.09393310546875,
        "x2": 538.5215454101562,
        "y1": 565.9761352539062,
        "y2": 615.8148193359375
      },
      "text": "34. Daniel S. Weld, Mausam, Christopher H. Lin, and Jonathan Bragg. 2015. Artificial Intelligence and Collective Intelligence. In Handbook of Collective Intelligence, Thomas W. Malone and Michael S. Bernstein (Eds.). The MIT Press."
    }, {
      "page": 11,
      "region": {
        "x1": 321.0939025878906,
        "x2": 564.5494995117188,
        "y1": 628.2701416015625,
        "y2": 689.0679931640625
      },
      "text": "35. Meng-Han Wu and Alexander J. Quinn. 2017. Confusing the Crowd: Task Instruction Quality on Amazon Mechanical Turk. In Proceedings of the Fifth AAAI Conference on Human Computation and Crowdsourcing (HCOMP ’17). AAAI Press, 206–215. https://aaai.org/ ocs/index.php/HCOMP/HCOMP17/paper/view/15943"
    }],
    "title": {
      "page": 10,
      "region": {
        "x1": 53.92900085449219,
        "x2": 115.20264434814453,
        "y1": 209.65829467773438,
        "y2": 215.2889404296875
      },
      "text": "REFERENCES"
    }
  }]
}